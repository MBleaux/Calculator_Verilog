; SMT-LIBv2 description generated by Yosys 0.25 (git sha1 e02b7f64b, gcc 11.4.0-1ubuntu1~22.04 -fPIC -Os)
; yosys-smt2-module wrapper
(declare-sort |wrapper_s| 0)
(declare-fun |wrapper_is| (|wrapper_s|) Bool)
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$658"], "smtname": 0, "smtoffset": 0, "type": "reg", "width": 16}
(declare-fun |wrapper#0| (|wrapper_s|) (_ BitVec 16)) ; $auto$async2sync.cc:171:execute$658
; yosys-smt2-register $auto$async2sync.cc:171:execute$658 16
(define-fun |wrapper_n $auto$async2sync.cc:171:execute$658| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#0| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$660"], "smtname": 1, "smtoffset": 0, "type": "reg", "width": 16}
(declare-fun |wrapper#1| (|wrapper_s|) (_ BitVec 16)) ; $auto$async2sync.cc:171:execute$660
; yosys-smt2-register $auto$async2sync.cc:171:execute$660 16
(define-fun |wrapper_n $auto$async2sync.cc:171:execute$660| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#1| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$662"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wrapper#2| (|wrapper_s|) (_ BitVec 1)) ; $auto$async2sync.cc:171:execute$662
; yosys-smt2-register $auto$async2sync.cc:171:execute$662 1
(define-fun |wrapper_n $auto$async2sync.cc:171:execute$662| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#2| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$664"], "smtname": 3, "smtoffset": 0, "type": "reg", "width": 2}
(declare-fun |wrapper#3| (|wrapper_s|) (_ BitVec 2)) ; $auto$async2sync.cc:171:execute$664
; yosys-smt2-register $auto$async2sync.cc:171:execute$664 2
(define-fun |wrapper_n $auto$async2sync.cc:171:execute$664| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#3| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$666"], "smtname": 4, "smtoffset": 0, "type": "reg", "width": 3}
(declare-fun |wrapper#4| (|wrapper_s|) (_ BitVec 3)) ; $auto$async2sync.cc:171:execute$666
; yosys-smt2-register $auto$async2sync.cc:171:execute$666 3
(define-fun |wrapper_n $auto$async2sync.cc:171:execute$666| ((state |wrapper_s|)) (_ BitVec 3) (|wrapper#4| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$668"], "smtname": 5, "smtoffset": 0, "type": "reg", "width": 3}
(declare-fun |wrapper#5| (|wrapper_s|) (_ BitVec 3)) ; $auto$async2sync.cc:171:execute$668
; yosys-smt2-register $auto$async2sync.cc:171:execute$668 3
(define-fun |wrapper_n $auto$async2sync.cc:171:execute$668| ((state |wrapper_s|)) (_ BitVec 3) (|wrapper#5| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$682"], "smtname": 6, "smtoffset": 0, "type": "reg", "width": 2}
(declare-fun |wrapper#6| (|wrapper_s|) (_ BitVec 2)) ; $auto$async2sync.cc:171:execute$682
; yosys-smt2-register $auto$async2sync.cc:171:execute$682 2
(define-fun |wrapper_n $auto$async2sync.cc:171:execute$682| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#6| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:205:execute$670"], "smtname": 7, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wrapper#7| (|wrapper_s|) (_ BitVec 1)) ; $auto$async2sync.cc:205:execute$670
; yosys-smt2-register $auto$async2sync.cc:205:execute$670 1
(define-fun |wrapper_n $auto$async2sync.cc:205:execute$670| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#7| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:205:execute$673"], "smtname": 8, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wrapper#8| (|wrapper_s|) (_ BitVec 1)) ; $auto$async2sync.cc:205:execute$673
; yosys-smt2-register $auto$async2sync.cc:205:execute$673 1
(define-fun |wrapper_n $auto$async2sync.cc:205:execute$673| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#8| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:205:execute$676"], "smtname": 9, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wrapper#9| (|wrapper_s|) (_ BitVec 1)) ; $auto$async2sync.cc:205:execute$676
; yosys-smt2-register $auto$async2sync.cc:205:execute$676 1
(define-fun |wrapper_n $auto$async2sync.cc:205:execute$676| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#9| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:205:execute$679"], "smtname": 10, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wrapper#10| (|wrapper_s|) (_ BitVec 1)) ; $auto$async2sync.cc:205:execute$679
; yosys-smt2-register $auto$async2sync.cc:205:execute$679 1
(define-fun |wrapper_n $auto$async2sync.cc:205:execute$679| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#10| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$fault_rtlil.cc:338:execute$640"], "smtname": 11, "smtoffset": 0, "type": "reg", "width": 8}
(declare-fun |wrapper#11| (|wrapper_s|) (_ BitVec 8)) ; $auto$fault_rtlil.cc:338:execute$640
; yosys-smt2-register $auto$fault_rtlil.cc:338:execute$640 8
; yosys-smt2-wire $auto$fault_rtlil.cc:338:execute$640 8
(define-fun |wrapper_n $auto$fault_rtlil.cc:338:execute$640| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#11| state))
(declare-fun |wrapper#12| (|wrapper_s|) Bool) ; \clock_i
; yosys-smt2-input clock_i 1
; yosys-smt2-clock clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clock_i"], "smtname": "clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clock_i"], "smtname": "clock_i", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wrapper_n clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
(declare-fun |wrapper#13| (|wrapper_s|) (_ BitVec 1)) ; \reset_i
(define-fun |wrapper#14| ((state |wrapper_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|wrapper#13| state)) #b1) (|wrapper#5| state) #b000)) ; \dut.fsm_unit.current_state [2:0]
(define-fun |wrapper#15| ((state |wrapper_s|)) Bool (= (|wrapper#14| state) #b011)) ; $flatten\dut.\fsm_unit.$procmux$104_CMP
(define-fun |wrapper#16| ((state |wrapper_s|)) Bool (= (|wrapper#14| state) #b100)) ; $flatten\dut.\fsm_unit.$procmux$103_CMP
(define-fun |wrapper#17| ((state |wrapper_s|)) Bool (or  (|wrapper#15| state) (|wrapper#16| state))) ; $flatten\dut.\fsm_unit.$auto$opt_reduce.cc:134:opt_pmux$609
(define-fun |wrapper#18| ((state |wrapper_s|)) (_ BitVec 1) (ite (|wrapper#17| state) #b1 #b0)) ; $flatten\dut.\fsm_unit.$0\done_rst_o[0:0]
(define-fun |wrapper#19| ((state |wrapper_s|)) Bool (not (or  (= ((_ extract 0 0) (|wrapper#14| state)) #b1) (= ((_ extract 1 1) (|wrapper#14| state)) #b1) (= ((_ extract 2 2) (|wrapper#14| state)) #b1) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $flatten\dut.\fsm_unit.$procmux$100_CMP
(define-fun |wrapper#20| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#19| state) #b1 #b0))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2371:Not$178
(define-fun |wrapper#21| ((state |wrapper_s|)) Bool (= (|wrapper#14| state) #b001)) ; $flatten\dut.\fsm_unit.$procmux$106_CMP
(define-fun |wrapper#22| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#21| state) #b1 #b0))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2371:Not$180
(define-fun |wrapper#23| ((state |wrapper_s|)) Bool (= (|wrapper#14| state) #b010)) ; $flatten\dut.\fsm_unit.$procmux$105_CMP
(define-fun |wrapper#24| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#23| state) #b1 #b0))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2371:Not$182
(define-fun |wrapper#25| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#15| state) #b1 #b0))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2371:Not$184
(define-fun |wrapper#26| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#16| state) #b1 #b0))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2371:Not$186
(define-fun |wrapper#27| ((state |wrapper_s|)) (_ BitVec 1) (bvand (|wrapper#25| state) (|wrapper#26| state))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2375:ReduceOr$196
(define-fun |wrapper#28| ((state |wrapper_s|)) (_ BitVec 1) (bvand (|wrapper#24| state) (|wrapper#27| state))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2375:ReduceOr$200
(define-fun |wrapper#29| ((state |wrapper_s|)) (_ BitVec 1) (bvand (|wrapper#22| state) (|wrapper#28| state))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2375:ReduceOr$204
(define-fun |wrapper#30| ((state |wrapper_s|)) (_ BitVec 1) (bvand (|wrapper#20| state) (|wrapper#29| state))) ; $flatten\dut.\fsm_unit.$auto$rtlil.cc:2375:ReduceOr$208
(define-fun |wrapper#31| ((state |wrapper_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|wrapper#30| state)) #b1) (|wrapper#10| state) (|wrapper#18| state))) ; $auto$async2sync.cc:209:execute$680
(define-fun |wrapper#32| ((state |wrapper_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|wrapper#31| state)) #b1) (|wrapper#2| state) #b0)) ; \dut.reg_done.q_o
; yosys-smt2-output done_o 1
(define-fun |wrapper_n done_o| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#32| state)) #b1))
; yosys-smt2-clock dut.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\clock_i"], "smtname": "dut.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
; yosys-smt2-clock dut.fsm_unit.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\fsm_unit", "\\clock_i"], "smtname": "dut.fsm_unit.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.fsm_unit.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
; yosys-smt2-clock dut.reg_a.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\reg_a", "\\clock_i"], "smtname": "dut.reg_a.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.reg_a.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
; yosys-smt2-clock dut.reg_b.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\reg_b", "\\clock_i"], "smtname": "dut.reg_b.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.reg_b.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
; yosys-smt2-clock dut.reg_done.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\reg_done", "\\clock_i"], "smtname": "dut.reg_done.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.reg_done.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
; yosys-smt2-clock dut.reg_fct.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\reg_fct", "\\clock_i"], "smtname": "dut.reg_fct.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.reg_fct.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
(declare-fun |wrapper#33| (|wrapper_s|) (_ BitVec 2)) ; \dut.reg_fct.q_o_fault
; yosys-smt2-input dut.reg_fct.q_o_fault 2
; yosys-smt2-witness {"offset": 0, "path": ["\\dut.reg_fct.q_o_fault"], "smtname": "dut.reg_fct.q_o_fault", "smtoffset": 0, "type": "input", "width": 2}
(define-fun |wrapper_n dut.reg_fct.q_o_fault| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#33| state))
(declare-fun |wrapper#34| (|wrapper_s|) Bool) ; \dut.reg_fct.q_o_fault_sel
; yosys-smt2-input dut.reg_fct.q_o_fault_sel 1
; yosys-smt2-wire dut.reg_fct.q_o_fault_sel 1
; yosys-smt2-witness {"offset": 0, "path": ["\\dut.reg_fct.q_o_fault_sel"], "smtname": "dut.reg_fct.q_o_fault_sel", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wrapper_n dut.reg_fct.q_o_fault_sel| ((state |wrapper_s|)) Bool (|wrapper#34| state))
; yosys-smt2-clock dut.reg_rem.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\reg_rem", "\\clock_i"], "smtname": "dut.reg_rem.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.reg_rem.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
; yosys-smt2-clock dut.reg_res.clock_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\dut", "\\reg_res", "\\clock_i"], "smtname": "dut.reg_res.clock_i", "smtoffset": 0, "type": "posedge", "width": 1}
(define-fun |wrapper_n dut.reg_res.clock_i| ((state |wrapper_s|)) Bool (|wrapper#12| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\global_fault_clock"], "smtname": 35, "smtoffset": 0, "type": "reg", "width": 32}
(declare-fun |wrapper#35| (|wrapper_s|) (_ BitVec 32)) ; \global_fault_clock
; yosys-smt2-register global_fault_clock 32
; yosys-smt2-wire global_fault_clock 32
(define-fun |wrapper_n global_fault_clock| ((state |wrapper_s|)) (_ BitVec 32) (|wrapper#35| state))
(define-fun |wrapper#36| ((state |wrapper_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|wrapper#31| state)) #b1) (|wrapper#1| state) #b0000000000000000)) ; \dut.reg_rem.q_o
; yosys-smt2-output rem_o 16
(define-fun |wrapper_n rem_o| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#36| state))
(define-fun |wrapper#37| ((state |wrapper_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|wrapper#31| state)) #b1) (|wrapper#0| state) #b0000000000000000)) ; \dut.reg_res.q_o
; yosys-smt2-output res_o 16
(define-fun |wrapper_n res_o| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#37| state))
; yosys-smt2-input reset_i 1
; yosys-smt2-witness {"offset": 0, "path": ["\\reset_i"], "smtname": "reset_i", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wrapper_n reset_i| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#13| state)) #b1))
(define-fun |wrapper#38| ((state |wrapper_s|)) Bool (bvuge (|wrapper#35| state) #b00000000000000000000000000000011)) ; $auto$rtlil.cc:2413:Ge$634
(define-fun |wrapper#39| ((state |wrapper_s|)) Bool (bvule (|wrapper#35| state) #b00000000000000000000000000000011)) ; $auto$rtlil.cc:2408:Le$632
(define-fun |wrapper#40| ((state |wrapper_s|)) (_ BitVec 1) (bvand (ite (|wrapper#38| state) #b1 #b0) (ite (|wrapper#39| state) #b1 #b0))) ; $auto$rtlil.cc:2401:And$636
(define-fun |wrapper#41| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#34| state) #b1 #b0))) ; $auto$rtlil.cc:2371:Not$630
(define-fun |wrapper#42| ((state |wrapper_s|)) (_ BitVec 1) (bvor (|wrapper#40| state) (|wrapper#41| state))) ; $auto$rtlil.cc:2402:Or$638
; yosys-smt2-assume 0 $auto$fault_rtlil.cc:325:execute$639
(define-fun |wrapper_u 0| ((state |wrapper_s|)) Bool (or (= ((_ extract 0 0) (|wrapper#42| state)) #b1) (not true))) ; $auto$fault_rtlil.cc:325:execute$639
(define-fun |wrapper#43| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#34| state) #b00000001 #b00000000)) ; \fault_cnt_incr
(define-fun |wrapper#44| ((state |wrapper_s|)) (_ BitVec 8) (bvadd (|wrapper#11| state) (|wrapper#43| state))) ; \global_fault_cnt
(define-fun |wrapper#45| ((state |wrapper_s|)) Bool (bvule (|wrapper#44| state) #b00000001)) ; $auto$rtlil.cc:2408:Le$648
; yosys-smt2-assume 1 $auto$fault_rtlil.cc:362:execute$649
(define-fun |wrapper_u 1| ((state |wrapper_s|)) Bool (or (|wrapper#45| state) (not true))) ; $auto$fault_rtlil.cc:362:execute$649
(define-fun |wrapper#46| ((state |wrapper_s|)) (_ BitVec 32) (bvadd (|wrapper#35| state) #b00000000000000000000000000000001)) ; $auto$rtlil.cc:2415:Add$625
(define-fun |wrapper#47| ((state |wrapper_s|)) (_ BitVec 1) (ite (|wrapper#15| state) #b1 #b0)) ; $flatten\dut.\fsm_unit.$0\done_we_o[0:0]
(define-fun |wrapper#48| ((state |wrapper_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|wrapper#30| state)) #b1) (|wrapper#9| state) (|wrapper#47| state))) ; $auto$async2sync.cc:209:execute$677
(define-fun |wrapper#49| ((state |wrapper_s|)) Bool (or  (|wrapper#21| state) (|wrapper#23| state) (|wrapper#15| state) (|wrapper#16| state))) ; $flatten\dut.\fsm_unit.$auto$opt_reduce.cc:134:opt_pmux$607
(define-fun |wrapper#50| ((state |wrapper_s|)) (_ BitVec 1) (ite (|wrapper#49| state) #b1 #b0)) ; $flatten\dut.\fsm_unit.$0\a_rst_o[0:0]
(define-fun |wrapper#51| ((state |wrapper_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|wrapper#30| state)) #b1) (|wrapper#8| state) (|wrapper#50| state))) ; $auto$async2sync.cc:209:execute$674
(define-fun |wrapper#52| ((state |wrapper_s|)) (_ BitVec 1) (ite (|wrapper#21| state) #b1 #b0)) ; $flatten\dut.\fsm_unit.$0\a_we_o[0:0]
(define-fun |wrapper#53| ((state |wrapper_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|wrapper#30| state)) #b1) (|wrapper#7| state) (|wrapper#52| state))) ; $auto$async2sync.cc:209:execute$671
(define-fun |wrapper#54| ((state |wrapper_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|wrapper#51| state)) #b1) (|wrapper#6| state) #b00)) ; $auto$fault_rtlil.cc:194:execute$622
(define-fun |wrapper#55| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#34| state) (|wrapper#33| state) (|wrapper#54| state))) ; \dut.reg_fct.q_o
(define-fun |wrapper#56| ((state |wrapper_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|wrapper#53| state)) #b1) #b10 (|wrapper#55| state))) ; $flatten\dut.\reg_fct.$0\q_o[1:0]
(define-fun |wrapper#57| ((state |wrapper_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|wrapper#51| state)) #b1) (|wrapper#56| state) #b00)) ; $auto$rtlil.cc:2468:Mux$685
(define-fun |wrapper#58| ((state |wrapper_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|wrapper#13| state)) #b1) #b100 #b000)) ; $flatten\dut.\fsm_unit.$3\next_state[31:0]
(define-fun |wrapper#59| ((state |wrapper_s|)) (_ BitVec 3) (ite (|wrapper#19| state) #b001 (ite (|wrapper#21| state) #b010 (ite (|wrapper#23| state) #b011 (ite (|wrapper#15| state) #b100 (ite (|wrapper#16| state) (|wrapper#58| state) #b000)))))) ; \dut.fsm_unit.next_state
(define-fun |wrapper#60| ((state |wrapper_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|wrapper#13| state)) #b1) (|wrapper#59| state) #b000)) ; $auto$rtlil.cc:2468:Mux$687
(define-fun |wrapper#61| ((state |wrapper_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|wrapper#53| state)) #b1) #b111 (|wrapper#4| state))) ; $auto$rtlil.cc:2468:Mux$689
(define-fun |wrapper#62| ((state |wrapper_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|wrapper#51| state)) #b1) (|wrapper#61| state) #b000)) ; $auto$rtlil.cc:2468:Mux$691
(define-fun |wrapper#63| ((state |wrapper_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|wrapper#53| state)) #b1) #b11 (|wrapper#3| state))) ; $auto$rtlil.cc:2468:Mux$693
(define-fun |wrapper#64| ((state |wrapper_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|wrapper#51| state)) #b1) (|wrapper#63| state) #b00)) ; $auto$rtlil.cc:2468:Mux$695
(define-fun |wrapper#65| ((state |wrapper_s|)) Bool (not (or  (= ((_ extract 0 0) (|wrapper#55| state)) #b1) (= ((_ extract 1 1) (|wrapper#55| state)) #b1)))) ; $flatten\dut.\alu_unit.$procmux$51_CMP
(define-fun |wrapper#66| ((state |wrapper_s|)) Bool (= (|wrapper#55| state) #b01)) ; $flatten\dut.\alu_unit.$procmux$50_CMP
(define-fun |wrapper#67| ((state |wrapper_s|)) Bool (= (|wrapper#55| state) #b10)) ; $flatten\dut.\alu_unit.$procmux$49_CMP
(define-fun |wrapper#68| ((state |wrapper_s|)) Bool (= (|wrapper#55| state) #b11)) ; $flatten\dut.\alu_unit.$procmux$41_CMP
(define-fun |wrapper#69| ((state |wrapper_s|)) Bool (or  (|wrapper#65| state) (|wrapper#66| state) (|wrapper#67| state) (|wrapper#68| state))) ; $flatten\dut.\alu_unit.$auto$opt_reduce.cc:134:opt_pmux$605
(define-fun |wrapper#70| ((state |wrapper_s|)) (_ BitVec 1) (ite (|wrapper#69| state) #b1 #b0)) ; \dut.alu_unit.done_o
(define-fun |wrapper#71| ((state |wrapper_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|wrapper#48| state)) #b1) (|wrapper#70| state) (|wrapper#2| state))) ; $auto$rtlil.cc:2468:Mux$697
(define-fun |wrapper#72| ((state |wrapper_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|wrapper#31| state)) #b1) (|wrapper#71| state) #b0)) ; $auto$rtlil.cc:2468:Mux$699
(define-fun |wrapper#73| ((state |wrapper_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|wrapper#51| state)) #b1) (|wrapper#3| state) #b00)) ; \dut.reg_a.q_o [1:0]
(define-fun |wrapper#74| ((state |wrapper_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|wrapper#51| state)) #b1) (|wrapper#4| state) #b000)) ; \dut.reg_b.q_o [2:0]
(define-fun |wrapper#75| ((state |wrapper_s|)) (_ BitVec 16) (bvurem (concat #b00000000000000 (|wrapper#73| state)) (concat #b0000000000000 (|wrapper#74| state)))) ; $flatten\dut.\alu_unit.$mod$./src/wrapper_gen.v:43$31_Y
(define-fun |wrapper#76| ((state |wrapper_s|)) Bool (distinct (concat #b00000 (|wrapper#74| state)) #b00000000)) ; $flatten\dut.\alu_unit.$ne$./src/wrapper_gen.v:41$29_Y
(define-fun |wrapper#77| ((state |wrapper_s|)) (_ BitVec 16) (ite (|wrapper#76| state) (|wrapper#75| state) #b0000000000000000)) ; $flatten\dut.\alu_unit.$2\rem_o[15:0]
(define-fun |wrapper#78| ((state |wrapper_s|)) Bool (or  (|wrapper#65| state) (|wrapper#66| state) (|wrapper#67| state))) ; $flatten\dut.\alu_unit.$auto$opt_reduce.cc:134:opt_pmux$603
(define-fun |wrapper#79| ((state |wrapper_s|)) (_ BitVec 16) (ite (|wrapper#78| state) #b0000000000000000 (ite (|wrapper#68| state) (|wrapper#77| state) #b0000000000000000))) ; \dut.alu_unit.rem_o
(define-fun |wrapper#80| ((state |wrapper_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|wrapper#48| state)) #b1) (|wrapper#79| state) (|wrapper#1| state))) ; $auto$rtlil.cc:2468:Mux$701
(define-fun |wrapper#81| ((state |wrapper_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|wrapper#31| state)) #b1) (|wrapper#80| state) #b0000000000000000)) ; $auto$rtlil.cc:2468:Mux$703
(define-fun |wrapper#82| ((state |wrapper_s|)) (_ BitVec 16) (bvudiv (concat #b00000000000000 (|wrapper#73| state)) (concat #b0000000000000 (|wrapper#74| state)))) ; $flatten\dut.\alu_unit.$div$./src/wrapper_gen.v:42$30_Y
(define-fun |wrapper#83| ((state |wrapper_s|)) (_ BitVec 16) (ite (|wrapper#76| state) (|wrapper#82| state) #b0000000000000000)) ; $flatten\dut.\alu_unit.$2\res_o[15:0]
(define-fun |wrapper#84| ((state |wrapper_s|)) (_ BitVec 16) (bvmul (concat #b00000000000000 (|wrapper#73| state)) (concat #b0000000000000 (|wrapper#74| state)))) ; $flatten\dut.\alu_unit.$mul$./src/wrapper_gen.v:36$28_Y
(define-fun |wrapper#85| ((state |wrapper_s|)) (_ BitVec 9) (bvsub (concat #b0000000 (|wrapper#73| state)) (concat #b000000 (|wrapper#74| state)))) ; { $flatten\dut.\alu_unit.$sub$./src/wrapper_gen.v:31$27_Y [15] $flatten\dut.\alu_unit.$sub$./src/wrapper_gen.v:31$27_Y [7:0] }
(define-fun |wrapper#86| ((state |wrapper_s|)) (_ BitVec 9) (bvadd (concat #b0000000 (|wrapper#73| state)) (concat #b000000 (|wrapper#74| state)))) ; $flatten\dut.\alu_unit.$add$./src/wrapper_gen.v:26$26_Y
(define-fun |wrapper#87| ((state |wrapper_s|)) (_ BitVec 16) (ite (|wrapper#65| state) (concat #b0000000 (|wrapper#86| state)) (ite (|wrapper#66| state) (concat ((_ extract 8 8) (|wrapper#85| state)) (concat ((_ extract 8 8) (|wrapper#85| state)) (concat ((_ extract 8 8) (|wrapper#85| state)) (concat ((_ extract 8 8) (|wrapper#85| state)) (concat ((_ extract 8 8) (|wrapper#85| state)) (concat ((_ extract 8 8) (|wrapper#85| state)) (concat ((_ extract 8 8) (|wrapper#85| state)) (|wrapper#85| state)))))))) (ite (|wrapper#67| state) (|wrapper#84| state) (ite (|wrapper#68| state) (|wrapper#83| state) #b0000000000000000))))) ; \dut.alu_unit.res_o
(define-fun |wrapper#88| ((state |wrapper_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|wrapper#48| state)) #b1) (|wrapper#87| state) (|wrapper#0| state))) ; $auto$rtlil.cc:2468:Mux$705
(define-fun |wrapper#89| ((state |wrapper_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|wrapper#31| state)) #b1) (|wrapper#88| state) #b0000000000000000)) ; $auto$rtlil.cc:2468:Mux$707
(define-fun |wrapper_a| ((state |wrapper_s|)) Bool true)
(define-fun |wrapper_u| ((state |wrapper_s|)) Bool (and
  (|wrapper_u 0| state)
  (|wrapper_u 1| state)
))
(define-fun |wrapper_i| ((state |wrapper_s|)) Bool (and
  (= (bvand (|wrapper#0| state) #b0000000000000000) #b0000000000000000) ; $auto$async2sync.cc:171:execute$658
  (= (bvand (|wrapper#1| state) #b0000000000000000) #b0000000000000000) ; $auto$async2sync.cc:171:execute$660
  (= (|wrapper#3| state) #b11) ; $auto$async2sync.cc:171:execute$664
  (= (|wrapper#4| state) #b111) ; $auto$async2sync.cc:171:execute$666
  (= (|wrapper#5| state) #b100) ; $auto$async2sync.cc:171:execute$668
  (= (bvand (|wrapper#6| state) #b00) #b00) ; $auto$async2sync.cc:171:execute$682
  (= (= ((_ extract 0 0) (|wrapper#7| state)) #b1) false) ; $auto$async2sync.cc:205:execute$670
  (= (= ((_ extract 0 0) (|wrapper#8| state)) #b1) true) ; $auto$async2sync.cc:205:execute$673
  (= (= ((_ extract 0 0) (|wrapper#9| state)) #b1) false) ; $auto$async2sync.cc:205:execute$676
  (= (= ((_ extract 0 0) (|wrapper#10| state)) #b1) true) ; $auto$async2sync.cc:205:execute$679
  (= (bvand (|wrapper#11| state) #b00000000) #b00000000) ; $auto$fault_rtlil.cc:338:execute$640
  (= (|wrapper#35| state) #b00000000000000000000000000010100) ; global_fault_clock
))
(define-fun |wrapper_h| ((state |wrapper_s|)) Bool true)
(define-fun |wrapper_t| ((state |wrapper_s|) (next_state |wrapper_s|)) Bool (and
  (= (|wrapper#46| state) (|wrapper#35| next_state)) ; $auto$fault_rtlil.cc:314:execute$626 \global_fault_clock
  (= (|wrapper#44| state) (|wrapper#11| next_state)) ; $auto$fault_rtlil.cc:356:execute$646 $auto$fault_rtlil.cc:338:execute$640
  (= (|wrapper#31| state) (|wrapper#10| next_state)) ; $flatten/dut./fsm_unit.$auto$proc_dlatch.cc:427:proc_dlatch$596 $auto$async2sync.cc:205:execute$679
  (= (|wrapper#48| state) (|wrapper#9| next_state)) ; $flatten/dut./fsm_unit.$auto$proc_dlatch.cc:427:proc_dlatch$561 $auto$async2sync.cc:205:execute$676
  (= (|wrapper#51| state) (|wrapper#8| next_state)) ; $flatten/dut./fsm_unit.$auto$proc_dlatch.cc:427:proc_dlatch$386 $auto$async2sync.cc:205:execute$673
  (= (|wrapper#53| state) (|wrapper#7| next_state)) ; $flatten/dut./fsm_unit.$auto$proc_dlatch.cc:427:proc_dlatch$351 $auto$async2sync.cc:205:execute$670
  (= (|wrapper#57| state) (|wrapper#6| next_state)) ; $flatten/dut./reg_fct.$procdff$601 $auto$async2sync.cc:171:execute$682
  (= (|wrapper#60| state) (|wrapper#5| next_state)) ; $auto$ff.cc:266:slice$657 $auto$async2sync.cc:171:execute$668
  (= (|wrapper#62| state) (|wrapper#4| next_state)) ; $auto$ff.cc:266:slice$656 $auto$async2sync.cc:171:execute$666
  (= (|wrapper#64| state) (|wrapper#3| next_state)) ; $auto$ff.cc:266:slice$655 $auto$async2sync.cc:171:execute$664
  (= (|wrapper#72| state) (|wrapper#2| next_state)) ; $auto$ff.cc:266:slice$652 $auto$async2sync.cc:171:execute$662
  (= (|wrapper#81| state) (|wrapper#1| next_state)) ; $auto$ff.cc:266:slice$651 $auto$async2sync.cc:171:execute$660
  (= (|wrapper#89| state) (|wrapper#0| next_state)) ; $auto$ff.cc:266:slice$650 $auto$async2sync.cc:171:execute$658
)) ; end of module wrapper
; yosys-smt2-topmod wrapper
; end of yosys output
